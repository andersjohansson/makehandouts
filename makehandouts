#!/bin/bash 

# In the folder containing a LaTeX source beamer file named 'foo.tex'
# one types 'makehandouts foo' to create 'foo-handout.pdf' for viewing
# slides without pauses, and create also 'foo-handoutnup.pdf' where n
# = 1,2,4 for easy formatted slides printing with acroread. 
#
# Notes: Run this command in the same folder containing 'foo.tex'
#       Type 'makehandouts' to get a hint on usage

usage() { echo "Usage: $0 [-1|2|3|4|6 (up)] [-c <screen|ebook|printer|prepress>] [-m (use latexmk)] TEXFILEBASENAME" 1>&2; exit 1; }
	# echo "usage: 'makehandouts <LaTeX root filename> [screen|ebook|printer|prepress]'"
	# echo "e.g.:  'makehandouts foo'  to create handouts for foo.tex"


latexmk=
compression=
variants=

while getopts ":c:m12346" opt; do
	case $opt in
		c)
			compression=$OPTARG
			[[ $compression = "screen" || $compression = "ebook" || $compression = "printer" || $compression = "prepress" ]] || usage
			;;
		m)
			latexmk=1
			;;

		2)
			variants="$variants 2up"
			;;
		3)
			variants="$variants 3up"
			;;
		4)
			variants="$variants 4up"
			;;
		6)
			variants="$variants 6up"
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
	esac
done

filename=${@:$OPTIND:1}


if [ -n "$filename" ]; then
	echo "# makefile for $filename.tex (created by makehandouts command)" > /tmp/makefile
	echo "# creates $filename-handout.pdf (for viewing slides without" >> /tmp/makefile
	echo "# pauses), and possibly some of filename-handout1up.pdf" >> /tmp/makefile
	echo "# -- $filename-handout6up.pdf, (formatted for printing)" >> /tmp/makefile
	if [[ -n "$variants" ]];then
		echo "default:	$variants" >> /tmp/makefile
	else
		echo "default:  $filename-handout.pdf" >> /tmp/makefile
	fi
	echo " " >> /tmp/makefile
	echo "2up:	$filename-handout2up.pdf" >> /tmp/makefile
	echo " " >> /tmp/makefile
	echo "4up:	$filename-handout4up.pdf" >> /tmp/makefile
	echo " " >> /tmp/makefile
	echo "6up:	$filename-handout6up.pdf" >> /tmp/makefile
	echo " " >> /tmp/makefile
	echo "3up:	$filename-handout3up.pdf" >> /tmp/makefile
	echo " " >> /tmp/makefile

	echo "$filename-handout3up.pdf: $filename-handout.pdf" >> /tmp/makefile
	echo "	pdfjam-slides3up $filename-handout.pdf --frame true  --outfile $filename-handout3up.pdf" >> /tmp/makefile
	echo " " >> /tmp/makefile

	echo "$filename-handout6up.pdf: $filename-handout.pdf" >> /tmp/makefile
	echo "	pdfjam-slides6up $filename-handout.pdf --frame true  --outfile $filename-handout6up.pdf" >> /tmp/makefile
	echo " " >> /tmp/makefile

	echo "$filename-handout4up.pdf: $filename-handout.pdf" >> /tmp/makefile
	echo "	pdfnup $filename-handout.pdf --nup 2x2 --frame true --outfile /tmp/junk.pdf" >> /tmp/makefile
	echo "	pdf90 /tmp/junk.pdf --outfile $filename-handout4up.pdf" >> /tmp/makefile
	echo " " >> /tmp/makefile

	echo "$filename-handout2up.pdf:	$filename-handout.pdf" >> /tmp/makefile
	echo "	pdfnup $filename-handout.pdf --nup 1x2 --no-landscape --frame true --outfile $filename-handout2up.pdf" >> /tmp/makefile
	echo " " >> /tmp/makefile

	echo "$filename-handout.pdf:	$filename-handout.tex" >> /tmp/makefile


	if [ 1 -eq "$latexmk" ]; then
		echo "	latexmk -pdf $filename-handout" >> /tmp/makefile
	else
		echo "	pdflatex $filename-handout" >> /tmp/makefile
		echo "	pdflatex $filename-handout" >> /tmp/makefile
	fi
	
	if [[ -n "$compression" ]]; then
		echo "	gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/$compression -dNOPAUSE -dQUIET -dBATCH -sOutputFile=\"$filename-handout-comp.pdf\" \"$filename-handout.pdf\"" >> /tmp/makefile
		echo "	mv $filename-handout-comp.pdf $filename-handout.pdf" >> /tmp/makefile
	fi
	echo " " >> /tmp/makefile

	echo "$filename-handout.tex:	$filename.tex" >> /tmp/makefile
	echo "	sed -e 's/\\documentclass\[/\documentclass[handout,/g' -e 's/\\documentclass{/\documentclass[handout]{/g' $filename.tex > $filename-handout.tex" >> /tmp/makefile
	echo "created makefile for $filename.tex"
else
	usage
fi


if [ -e $filename.tex ]; then 
	echo "checking that $filename.tex exists...yes"
	make -f /tmp/makefile
else
	echo "Aborting: File $filename.tex does not exist! Typo?" >&2
	exit 1
fi
